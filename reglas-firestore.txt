REGLAS ACTUALES:

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if true;  // Permite lectura y escritura sin restricciones
    }
  }
}

-------------------------

REGLAS DE PRIMERA PROPUESTA DE CHATGPT

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Colección de usuarios: cada usuario solo puede leer/escribir su propio doc
    match /users/{userId} {
      allow read, write: if request.auth != null
                         && request.auth.uid == userId;
    }

    // Presupuestos: cada presupuesto tiene un campo `uid`
    match /Presupuestos/{budgetId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null
                            && request.auth.uid == resource.data.uid;
      // CREATE: forzamos que el nuevo doc lleve el uid correcto
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;
    }

    // Gastos: cada gasto debe llevar `uid`
    match /gastos/{expenseId} {
      allow read: if request.auth != null
                  && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;
      allow update, delete: if request.auth != null
                            && request.auth.uid == resource.data.uid;
    }

    // Notificaciones: opcional, si las guardás por usuario
    match /notificaciones/{noteId} {
      allow read: if request.auth != null
                  && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;
      allow update, delete: if request.auth != null
                            && request.auth.uid == resource.data.uid;
    }

    // Resto de colecciones: negar por defecto
    match /{document=**} {
      allow read, write: if false;
    }
  }
}